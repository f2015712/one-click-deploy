name: CI Pipeline

on:
  pull_request:
    branches:
      - main

jobs:
  linting:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run Linter
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  build:
    name: Build Code
    runs-on: ubuntu-latest
    needs: linting
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./DockerFile  # Path to your Dockerfile
          push: false         # Set to 'true' if you want to push to a registry
          tags: sks2971996/one-click-deploy:latest

  testing:
    name: Run Test Cases
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Tests
        run: |
          python -m pytest --maxfail=1 --disable-warnings --quiet

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: ./

  push-to-dockerhub:
      runs-on: ubuntu-latest
      name: Push Docker image to Dockerhub

      steps:
        - name: Checkout Code
          uses: actions/checkout@v3

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2

        - name: Log in to DockerHub
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKER_USERNAME }}  # Docker Hub username stored as a GitHub secret
            password: ${{ secrets.DOCKER_PASSWORD }}  # Docker Hub password stored as a GitHub secret

        # Step 4: Build and push the Docker image
        - name: Build and Push Docker Image
          uses: docker/build-push-action@v4
          with:
            context: .  # Path to the Dockerfile directory
            file: ./DockerFile  # Path to the Dockerfile
            push: true  # Push the image to Docker Hub
            tags: |
              ${{ secrets.DOCKER_USERNAME }}/one-click-deploy:${{ github.sha }}
